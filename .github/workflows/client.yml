name: check format for React App

on:
  push:
    paths:
      - "client/**"
  pull_request:
    paths:
      - "client/**"

jobs:
  client-check-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies (Client)
        working-directory: ./client
        run: npm ci

      - name: Run ESLint on changed files
        continue-on-error: true
        working-directory: ./client
        run: |
          changed_files=$(git diff --name-only --diff-filter=ACMRT HEAD^ HEAD | grep -E '\.(js|jsx|ts|tsx)$' | sed 's|^client/||' || true)

          if [ -n "$changed_files" ]; then
            echo "Running ESLint on changed files:"
            echo "$changed_files"
            npx eslint $changed_files
          else
            echo "No JavaScript/TypeScript files changed"
          fi

  client-run-tests:
    runs-on: ubuntu-latest
    needs: client-check-format
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        working-directory: ./client
        run: npm ci

      - name: Run tests
        working-directory: ./client
        run: npm test

  client-docker-build-push:
    # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [client-check-format, client-run-tests]
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: |
            ghcr.io/aet-devops25/team-cache-me-if-you-can/client:latest
            ghcr.io/aet-devops25/team-cache-me-if-you-can/client:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

  client-deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [client-check-format, client-run-tests, client-docker-build-push]
    # if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Kubeconfig
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: Deploy to Kubernetes
        run: |
          sed -i "s|image: ghcr.io/aet-devops25/team-cache-me-if-you-can/client.*|image: ghcr.io/aet-devops25/team-cache-me-if-you-can/client@${{ needs.client-docker-build-push.outputs.image-digest }}|g" client/k8s/client-deployment.yml
          kubectl apply -f client/k8s
