services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./client/build:/usr/share/nginx/html
    depends_on:
      - gateway
      - user
      - files

  react-app:
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
    volumes:
      - ./client/src:/app/src
      - ./client/public:/app/public
    # later for production
    # environment:
    #   - NODE_ENV=production
    # depends_on:
    #   - nginx

  user:
    build:
      context: ./server/user
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    container_name: user-service
    env_file: "environment/.env.docker.user"
    depends_on:
      mysql:
        condition: service_healthy

  gateway:
    build:
      context: ./server/gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: gateway-service
    depends_on:
      - user
      - files

  files:
    build:
      context: ./server/files
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    container_name: files-service
    env_file: "environment/.env.docker.files"
    depends_on:
      mysql:
        condition: service_healthy
  mysql:
    image: mysql:8.0.33
    container_name: mysql
    user: "999:999"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./environment/db_init:/docker-entrypoint-initdb.d
      - ./environment/mysql/conf.d:/etc/mysql/conf.d
    env_file: "environment/.env.docker.mysql"
    environment:
      MYSQL_ROOT_PASSWORD: StrongRootPass123!
      MYSQL_DATABASE: my_database # Must match your init script
    command:
      - --lower-case-table-names=1
      - --socket=/tmp/mysql.sock
      - --pid-file=/tmp/mysql.pid
      - --default-authentication-plugin=mysql_native_password
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "127.0.0.1",
          "-u",
          "root",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
volumes:
  mysql_data:
    driver: local
    driver_opts:
      type: none
      device: ./environment/volume/mysql_data
      o: bind
